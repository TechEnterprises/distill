<?php
/**
 * @file
 * Module file for distill.
 */

use Drupal\image\Entity\ImageStyle;
use Drupal\Core\Url;
use Drupal\distill\Distill;
use Drupal\distill\DistillProcessor;

/**
 * Processor for fields of type 'integer'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_integer(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'float'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_float(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'decimal'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_decimal(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'list_integer'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_list_integer(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'list_float'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_list_float(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'string'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_string(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'string_long'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_string_long(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'list_string'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_list_string(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'text'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_text(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'text_long'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_text_long(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'text_with_summary'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_text_with_summary(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return array(
    'text' => $value[0]['value'],
    'summary' => $value[0]['summary'],
  );
}

/**
 * Processor for fields of type 'boolean'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_boolean(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'] == 0 ? FALSE : TRUE;
}

/**
 * Processor for fields of type 'file'.
 *
 * @param Drupal\file\Plugin\Field\FieldType\FileFieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_file(Drupal\file\Plugin\Field\FieldType\FileFieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  $file = file_load($value[0]['target_id']);
  return file_create_url($file->getFileUri());
}

/**
 * Processor for fields of type 'image'.
 *
 * @param Drupal\image\Plugin\Field\FieldType\ImageItem $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_image(Drupal\image\Plugin\Field\FieldType\ImageItem $field, $index, array $settings) {
  $value = $field->getValue();
  $file = file_load($value['target_id']);
  $uri = $file->getFileUri();

  // If an image style is specified, get path for style.
  if (isset($settings['image_style'])) {
    $url = ImageStyle::load($settings['image_style'])->buildUrl($uri);
  }
  else {
   $url = file_create_url($file->getFileUri());
  }

  return $url ? $url : NULL;
}

/**
 * Processor for fields of type 'entity_reference'.
 *
 * @param $field
 *   Referenced entity object.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_entity_reference($field, $index, array $settings) {
  $output = $field->id();

  // If the settings array has specified that it wants fields of the 
  // referenced entity to be returned.
  if (isset($settings['include_fields'])) {
    $processor = isset($settings['processor']) ? $settings['processor'] : new DistillProcessor();
    $distiller = new Distill($field, $processor);

    // If include_fields is an array, and contains values, set those values.
    if (is_array($settings['include_fields']) && !empty($settings['include_fields'])) {
      foreach($settings['include_fields'] as $field_name => $field_settings) {
        // If no field settings were specified, use
        // field value instead of index as name.
        if (is_int($field_name)) {
          $field_name = $field_settings;
          $field_settings = array();
        }
        $distiller->setField($field_name, $field_settings);
      }
    }

    // If include_fields is a boolean and is set to TRUE, include all fields.
    elseif ($settings['include_fields'] === TRUE) {
      $distiller->setAllFields();
    }

    $output = $distiller->getFieldValues();
  }
  elseif (isset($settings['path']) && $settings['path'] === TRUE) {
    $output = $field->url();
  }


  return $output;
}

/**
 * Processor for fields of type 'link'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_link(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return array(
    'path' => $value[0]['uri'],
    'title' => $value[0]['title'],
  );
}

/**
 * Processor for fields of type 'datetime'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_datetime(Drupal\datetime\Plugin\Field\FieldType\DateTimeFieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'created'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_created(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'changed'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_changed(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'uuid'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_uuid(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'language'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_language(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'path'.
 *
 * @param Drupal\path\Plugin\Field\FieldType\PathFieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_path(Drupal\path\Plugin\Field\FieldType\PathFieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}

/**
 * Processor for fields of type 'comment'.
 *
 * @param Drupal\comment\Plugin\Field\FieldType\CommentItem $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_comment(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  return $field->getValue();
}

/**
 * Processor for fields of type 'email'.
 *
 * @param Drupal\Core\Field\FieldItemList $field
 *   Object representing a configurable field on an entity.
 * @param int $index
 *   Delta of field being processed.
 * @param array $settings
 *   Processor configuration and context.
 *
 * @return string
 *   Processed value of field.
 */
function distill_distill_process_email(Drupal\Core\Field\FieldItemList $field, $index, array $settings) {
  $value = $field->getValue();
  return $value[0]['value'];
}
